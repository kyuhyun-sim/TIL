멀티 프로세스
멀티 프로세스는 하나의 프로그램을 여러 프로세스로 구성하여 각 프로세스가 하나의 작업을 처리하는 환경이다.
프로세스는 운영체제로부터 CPU 시간, 주소공간, 독립된 메모리 영역(code, data, stack, heap)을 할당받는다.
각 프로세스는 독립된 주소 공간에서 실행되어 다른 프로세스의 주소 공간에 접근할 수 없다. (독립적)
프로세스 간 IPC(Inter-Process-Communication)를 사용해 데이터를 주고 받는다.
하나의 프로세스가 잘못 되어도 프로그램은 동작한다.
브라우저 중 크롬 브라우저가 멀티 프로세스로 동작한다.
장점으로는 독립된 구조이기 때문에 안정성이 높다.
단점으로는 각각 독립된 메모리 영역을 갖고 있어, 많은 메모리 공간과 CPU 시간을 차지하고 작업량이 많을 수록 오버헤드가 발생한다.
또한 Context Switching 비용이 커 성능 저하가 따라올 수 있다.

멀티 스레드
같은 프로세스 내에 둘 이상의 스레드를 동시에 실행하는 환경을 멀티 스레드 환경이라 부른다.
기본적으로 하나의 프로세스가 생성되면 하나의 스레드가 생성되고 이를 메인 스레드라 부른다. 
스레드는 프로세스 내에서 stack만 따로 할당받기 때문에 code, data, heap 영역은 공유한다.
장점으로는 적은 메모리 공간을 차지하고 Context Switching이 빠르다.
또한 프로그램의 응답 시간이 단축되고 시스템의 처리율이 향상된다.
그리고 시스템의 자원을 공유하므로 시스템의 자원 소모가 감소한다. (자원의 효율성 증대)
마지막으로 프로세스간 통신(IPC)에 비해 통신 비용이 절감된다.
단점으로는 여러 개의 스레드가 자원을 공유하기 때문에 동기화 문제를 고려해야한다. (병목 현상, 데드락 등..)
하나의 스레드에 문제가 발생하면 전체 스레드에 영향을 미치며, 멀티 스레드를 사용하는 프로그래밍에서는 코드 작성과 디버깅하기가 까다로운 경우가 많다고 한다.
