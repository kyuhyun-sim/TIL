UUID 는 범용 고유 식별자로 2f48f241-9d64-4d16-bf56-70b9d4e0e79a 이와같은 형태로 준다.
완벽한 고유값이라는 보장은 없지만 실제 사용시에 중복될 가능성이 거의 없어서 테이블의 key값이나 파일 업로드시 임시 파일명 등으로 쓰일수 있다.
이번 프로젝트에서는 동명의 이미지 파일을 업로드시 이미지 파일 변환이 안되는 에러를 이 UUID를 써서 해결하였다.

인터페이스와 추상클래스의 차이점, 객체지향 설계란? 자바 solid 관련 공부하기
추상클래스는 일반적인 클래스와 별 다를 것이 없다.
단지, 추상 메서드를선언하여 상속을 통해 자손 클래스에서 완성하도록 유도하는 클래스이다.
그래서 미완성 설계도라고 불린다고도 한다.
상속을 위한 클래스이기 때문에 이 추상클래스를 가지고 따로 객체를 생성할 수 없다.
class 앞에 "abstract" 예약어를 사용하여 상속을 통해서 구현해야한다는 것을 알려주고 선언부만 작성하는 추상메서드를 선언할 수 있다.

인터페이스는 기본 설계도라고 할 수 있다.
인터페이스도 추상클래스처럼 다른 클래스를 작성하는데 도움을 주는 목적으로 작성하고 클래스와 다르게 다중상속(구현)이 가능하다.

객체지향의 상속은 엄밀히 말하면 가족관계의 상속과 다르다.
객체지향의 상속은 재사용과 확장으로 이해 해야한다.
아래는 그 예시다.
ex)하위 클래스는 상위 클래스다. o
아버지는 할아버지다?x
아들은 아버지다?x

포유류는 동물이다.o
고래는 포유류다.o
고래는 동물이다.o

이처럼 상속은 상위 클래스의 특성을 재사용 해야하며, 상위 클래스의 특성을 확장시켜줘야 하고, is kind of 관계를 만족해야 한다.
이때문에 상속은 extends 키워드를 사용하는 것이다.

반대로 인터페이스는 클래스가 무엇을 할 수 있다라고 하는 기능을 구현하도록 강제하는 특징을 가지고 있다.
그래서 인터페이스는 extends 키워드가 아니라 implements 키워드를 사용하는 것이다.

추상 클래스처럼 불완전한 것이기 때문에 그 자체만으로 사용되기 보다,
다른 클래스를 작성하는데 도움을 줄 목적으로 작성된다.
일반 메서드 또는 멤버 변수를 구성원으로 가질 수 없다.
모든 멤버 변수는 public static final이어햐 하며, 이를 생략할 수 있다.
모든 메서드는 public abtract이어야 하며, 이를 생략할 수 있다.
(단, JDK1.8부터 static 메서드와 default 메서드를 사용할 수 있다.)

인터페이스 변수는 아무 인스턴스도 존재하지 않는 시점이기 떄문에 스스로 초기화 될 권한이 없다.
때문에 public static final를 사용해 구현 객체의 같은 상태를 보장한다.