스택영역
메모리의 스택(stack) 영역은 함수의 호출과 관계되는 지역 변수와 매개변수가 저장되는 영역이다. 
스택 영역은 함수의 호출과 함께 할당되며, 함수의 호출이 완료되면 소멸한다. 
이렇게 스택 영역에 저장되는 함수의 호출 정보를 스택 프레임(stack frame)이라고 한다. 
스택 영역은 푸시(push) 동작으로 데이터를 저장하고, 팝(pop) 동작으로 데이터를 인출한다. 
이러한 스택은 후입선출(LIFO, Last-In First-Out) 방식에 따라 동작하므로, 가장 늦게 저장된 데이터가 가장 먼저 인출된다. 
스택 영역은 메모리의 높은 주소에서 낮은 주소의 방향으로 할당된다.

힙영역
메모리의 힙(heap) 영역은 사용자가 직접 관리할 수 있는 ‘그리고 해야만 하는’ 메모리 영역이다. 
힙 영역은 사용자에 의해 메모리 공간이 동적으로 할당되고 해제된다. 
힙 영역은 메모리의 낮은 주소에서 높은 주소의 방향으로 할당된다.

메소드영역
메서드 영역이란 어떠한 Java 프로그램을 실행시켰을 때, 해당 프로그램에서 사용되는 class에 정의된 내용을 저장해 두는 영역이다. 
이는 프로그램 실행 시 JVM의 class loader를 통해 진행되며, class loader는 class 정보를 메서드 영역에 로딩 후 각각 기능들의 참조에 대해 링킹을 수행, 그리고 초기화까지 진행하게 된다. 
즉, 메서드 영역은 해당 프로그램의 모든 스레드에 공유되어 사용될 정보를 저장하고 있는 영역이라고 볼 수 있다

자바의 최상위 부모클래스
Object 클래스이다.
자동으로 java.lang.Object 클래스를 상속받으므로 extends 역시 필요 없다.

직렬화
자바 시스템 내부에서 사용되는 객체 또는 데이터를 외부의 자바 시스템에서도 사용할 수 있도록 바이트(byte) 형태로 데이터를 변환하는 기술이다. 
(주로 네트워크 통신할 때)
시스템적으로 이야기하면 JVM의 메모리에 상주(힙 또는 스택)되어 있는 객체 데이터를 바이트 형태로 변환하는 기술이다.

final / finally / finalize() 차이
final 키워드를 명시하여 한 번만 할당하고 싶을 때 사용한다.

finally try-catch와 함께 사용되며, 필수 블록은 아니다. 예외 발생 유무와 상관없이 무조건 수행되며, 데이터베이스 등을 사용한 후 닫는 기능과 같이 항상 수행해야 할 필요가 있는 경우에 사용된다.

finalize() 최상위 Object 클래스에 포함된 메서드, JVM이 메모리 누수를 방지하기 위해 실행하는 Garbarge Collection(GC)이 수행될 때 더 이상 사용되지 않는 자원에 대한 정리 작업을 진행하기 위해 호출되는 종료자 메서드이다.