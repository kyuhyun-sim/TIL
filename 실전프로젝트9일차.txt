Int, Integer 차이(추후 공부)
서버 배포를 http가 아닌 https 로 하게 되었다.
https란 웹사이트 내에서 무결성을 보장하기 위해 기존 http 에서 secure socket 가 추가된 것으로 말그대로, 기본 골격이나 사용목적은 http와 거의 동일하지만, 데이터를 주고 받는 과정에서 보안 요소가 추가 된 것이라 할 수 있다.
이 https를 사용하면 서버와 클라이언트 사이의 모든 통신 내용이 암호화 되는데, 이때 암호화를 풀수 있는 키가 그 페이지를 보는 특정 사용자에게만 알려지도록 해준다.
이러한 장점으로 많은 사이트들이 https를 사용하는 추세이며 우리가 앱에서 작동시키기 위해 사용할 pwa라는 웹 앱 방식도 이런 신뢰할 수 있는 연결 상태에서만 동작하기 때문에 서버 역시 https를 사용할 필요가 있었다.
이런 https를 사용하기 위한 방식 중 요즘 가장 많이 활용된다는 nginx 를 이용하여 htttps 서버를 구축하는 일을 맡아 수행해보기로 했다.

Nginx란 무엇인가?
경량 웹 서버를 말한다.
클라이언트로부터 요청을 받았을 때 요청에 맞는 정적 파일을 응답해주는 http web server로 활용되기도 하고, Reverse Proxy Server(서버와 클라이언트 사이 중계기 역할)로 활용하여 WAS 서버(동적 웹서버)의 부하를 줄일 수 있는 로드 밸런서로 활용되기도 한다.

Nginx의 장점
Nginx는 Event-Driven 구조로 동작하기 때문에 한 개 또는 고정된 프로세스만 생성하여 사용하고, 비동기 방식으로 요청들을 Concurrency(어떤 프로그램이나 알고리즘이 순서에 상관없이 동시에 수행되는 것) 하게 처리해 줄 수 있다.
이때문에 Nginx는 새로운 요청이 들어오더라도 새로운 프로세스와 쓰레드를 생성하지 않기 때문에 프로세스와 쓰레드 생성 비용이 존재하지 않고, 적은 자원으로도 효율적인 운용이 가능하다.
덕분에 단일 서버에서도 동시에 많은 연결을 처리해줄 수 있다고 한다.

미션완료수를 기준으로 랭킹 상위를 3명만 출력되게 고쳐보려 했다.
하지만 jpql의 경우 jpa 예약어 중 TOP 예약어의 존재 때문인지 limit가 지원되지 않아 상위 3명만으로 제한하는데 어려움이 존재했다.
이 때문에 PageRequest pageRequest = PageRequest.of(0, 3);
        List<SubmitMission> memberRankList = submitMissionRepository.findRankMissions(pageRequest);
이렇게 pageRequest를 이용해서 0번째 페이지를 3번째까지 출력되게 제한함으로서 limit와 유사한 기능을 구현하였다.

솔리드
greenstepinlife@gmail.com
inlife99


