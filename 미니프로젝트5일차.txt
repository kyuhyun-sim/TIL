ErrorCode exception
Error Response 객체는 항상 동일한 Error Response를 가져야 한다. 그렇지 않으면 클라이언트에서 예외 처리를 항상 동일한 로직으로 처리하기 어렵다. 
Error Response 객체를 유연하게 처리하기 위해서 Map<Key, Value> 형식으로 처리하는 경우가 있는데 이는 좋지 않은 방법이다. 
우선 Map 이라는 친구는 런타입시에 정확한 형태를 갖추기 때문에 객체를 처리하는 개발자들도 정확히 무슨 키에 무슨 데이터가 있는지 확인하기 어렵기 때문이다.

자바 소수점 처리하는 방법 3가지
처음은 Math.round 방식이다.
Math는 대표적인 수학모듈로 소수점을 처리하는 기능을 제공해준다.
하지만 Math.round를 쓰게 되면 소수점 위치에 반올림하게 되는데 원하는 위치를 반올림 하기 위해서는 별도의 인자값을 넣는 것이 아니라 소수점을 그만큼 Shift 해야한다.
즉, 2자리까지 보여주고 반올림을 하고 싶을 경우 현재값에 100을 곱하고 Math.round를 쓰면 자리가 옮겨진 상태에서 소수점을 반올림하게 된다.
이때 다시 100을 나눌 경우 소수점이 처리가 된다.

다음은 String.format 방식이다.
매우 직관적이고 쉬운 방식으로 String.format을 할 경우 원하는 자리수를 지정하고 

값을 대입하면그만이다. 직관적이고 실수를 할 가능성이 적다는 장점이 있다.

마지막은 NumberFormat방식이 있다.
상당히 번거로운 작업이 있을 수 있으나, 소수점을 처리를 자주 쓰게 된다면, 함수를 CommonUtil 등에 묶어서 해당 메소드를 호출하여 소수점을 출력하는 식으로 처리해보는것도 방법이다.
이럴경우 소스를 보다 깔끔하게 처리하할 수 있고, 유지보수 등에도 효율적일 수 있다.  

인터페이스와 추상클래스의 차이점, 객체지향 설계란? 자바 solid 관련 공부하기
